name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '8'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Copy frontend build to backend
      run: |
        mkdir -p backend/target/frontend
        cp -r frontend/dist/airline-order-frontend/* backend/target/frontend/

    - name: Build backend
      run: |
        cd backend
        mvn clean package -DskipTests

    - name: Run tests
      run: |
        cd backend
        mvn test

    - name: Create deployment package
      run: |
        mkdir -p deploy
        cp backend/target/*.jar deploy/
        cp -r scripts deploy/
        tar -czf deployment.tar.gz deploy/

    - name: Deploy to EC2
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        port: 22
        script: |
          cd /opt/airline-order
          sudo systemctl stop airline-order || true
          rm -rf old_backup
          mv current old_backup || true
          mkdir -p current

    - name: Upload deployment package
      if: github.ref == 'refs/heads/main'
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        port: 22
        source: "deployment.tar.gz"
        target: "/opt/airline-order/current"

    - name: Extract and start application
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        port: 22
        script: |
          cd /opt/airline-order/current
          tar -xzf deployment.tar.gz
          chmod +x deploy/scripts/deploy.sh
          ./deploy/scripts/deploy.sh
          sudo systemctl start airline-order
          sudo systemctl enable airline-order
          
          # Health check
          sleep 10
          curl -f http://localhost:8080/actuator/health || exit 1